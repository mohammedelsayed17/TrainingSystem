@model TrainingSystem.ViewModels.TraineeVM

@{
    ViewData["Title"] = "Edit Trainee";
}

<h2>Edit Trainee</h2>

<form asp-action="Edit" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Address"></label>
        <input asp-for="Address" class="form-control" />
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Grade"></label>
        <input asp-for="Grade" class="form-control" />
        <span asp-validation-for="Grade" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DeptID"></label>
        <select asp-for="DeptID" asp-items="@(new SelectList(Model.Departments, "Id", "Name"))" class="form-control">
            <option value="">-- Select Department --</option>
        </select>
        <span asp-validation-for="DeptID" class="text-danger"></span>
    </div>

    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <div class="mb-3">
            <label>Current Image:</label><br />
            <img src="~/images/@Model.ImageUrl" width="100" class="rounded" />
        </div>
    }

    <div class="form-group">
        <label asp-for="ImageFile"></label>
        <input asp-for="ImageFile" type="file" class="form-control" />
        <span asp-validation-for="ImageFile" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Update</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}